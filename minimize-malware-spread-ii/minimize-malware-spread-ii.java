class Solution {
    public int minMalwareSpread(int[][] graph, int[] initial) {
        
        if (initial.length == 1) return initial[0];
        
        int min_val = Integer.MAX_VALUE;
        int min_idx = 0;
        
        for (int i = 0; i < initial.length; ++i)
        {
            Set<Integer> infected = new HashSet();
            for (int j = 0; j < initial.length; ++j)
            {
                if (i != j)
                {
                    dfs(graph, infected, initial[j], initial[i]);
                }
            }
            
            if (infected.size() < min_val)
            {
                min_val = infected.size();
                min_idx = initial[i];
            }
            else if (infected.size() == min_val)
            {
                min_idx = Math.min(initial[i], min_idx);
            }
        }
        
        return min_idx;
    }
    
    void dfs(int[][] graph, Set<Integer> infected, int curr, int removed)
    {
        if (!infected.contains(curr) && curr != removed)
        {
            infected.add(curr);
            for (int j = 0; j < graph[curr].length; ++j)
            {
                if (graph[curr][j] == 1)
                {
                    dfs(graph, infected, j, removed);
                }
            }
        }
    }
}